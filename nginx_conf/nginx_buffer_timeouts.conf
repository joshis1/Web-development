# Buffer and timeouts

worker_processes auto;

events {
    worker_connections 1024;
}

# Buffering 

#  when a process or nginx worker reads data into memory RAM before writing it to next destination.
#  Port 80, writes that data to memory.
#  Buffer overflow to HD.
#  static files - buffering file to the memory and send the data from the memory to the client.


# timeouts - cut off time for a given event.
# stop after a few second.
# to stop rather than client sending the endless data to the server.



http {


include mime.types;

# Buffer size for POST submissions - coming from FORM submission.
# basic form submission should be within 10K.
client_body_buffer_size 10k; 

# don't receive more than 8m from the client.
# otherwise 413 - "request entity too large"
client_max_body_size 8m;

# Buffer size for Headers
# reading/requesting headers.
client_header_buffer_size 1k;

# max time to receive client headers/body
# time between consecutive requests.
# 12 milliseconds.
# you can reduce it for better performance.
client_body_timeout 12;
client_header_timeout 12; 

# 30 - 30 milliseconds, 30s - seconds, 30m - minutes, 30h - hours, 30d - days

# max time to keep a connection open for 
# client is requesting number of files.
# keeping it high will avoid closing and re-opening.
# making it low will cause a lot of worker process resources for a long.
# a timeout won't apply if the client closes the connection properly.
keepalive_timeout 15;

# Max time for the client accept/receive a response
send_timeout 10;


# Skip bufferfing for static files 
sendfile on; 

# optimize sendfile packets
# 
# enable nginx to optimize the tcp packets to be sent.
# optimize for static resources.
tcp_nopush on;




}
# Basic Auth 

# simple username and password.

# .htpasswd 

# apt-get install apache2-utils 

# yum install httpd-tools 

# htpasswd -c /etc/nginx/.htpasswd  user1 
# password: nosecret
# cat /etc/nginx/.htpasswd 

events {

}


http {

 include mime.types;

 # redirect all http request to equivalent https request.


# dedicated server context

# Redirect all traffic to HTTPS

server {
    listen 80;
    server_name 44.201.241.101;

    # curl -Ik http://44.201.241.101/
    # HTTP/1.1 301 Moved Permanently
    # Server: nginx/1.21.4
    # Date: Tue, 21 Dec 2021 21:38:10 GMT
    # Content-Type: text/html
    # Content-Length: 169
    # Connection: keep-alive
    # Location: https://44.201.241.101/

    return 301 https://$host$request_uri;

}



 server {

     listen 443 ssl http2;
     server_name 44.201.241.101;

     root /static_sites/Adare_Restaurant;

     index index.html;

     ssl_certificate /etc/nginx/ssl/self.crt;

     ssl_certificate_key /etc/nginx/ssl/self.key;

     # Disable SSL - Secure Socket layer.
     # Outdated and replaced with TLS - transport layer Security.

     # We are using TLS version now.
     ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
    
     # Optimize cipher suits
     ssl_prefer_server_ciphers on;
     ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

     # Enable DH Params - Diffie-Hellman Key Exchange Params enable 
     # DH Params allows server to do key exchange with perfect secrecy.


     # openssl dhparam 2048 -out /etc/nginx/ssl/dhparam.pem
     ssl_dhparam /etc/nginx/ssl/dhparam.pem;

     # Enable HSTS - strict transport security
     # not to load anything over http.
     # minimize redirect from 80 to 443
     add_header Strict-Transport-Security "max-age=31536000" always;
    
     # SSL Sessions 
     # Cache SSL handshaking sessions
     ssl_session_cache shared:SSL:40m;
     ssl_session_timeout 4h;

     # validates the ssl session - issued by the server to be used by the client.
     ssl_session_tickets on;



     location / {
         auth_basic "Secure Area";
         auth_basic_user_file /etc/nginx/.htpasswd;
         try_files $uri $uri/ =404;
     }

     location ~\.php$ {
         include fastcgi.conf;
         fastcgi_pass unix:/var/run/php-fpm.sock;

     }


 }

}

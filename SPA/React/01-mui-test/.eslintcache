[{"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\index.js":"1","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\App.js":"2","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\test.ts":"3","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Line.js":"4","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\DialPlan.js":"5","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Qos.js":"6","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Nat.js":"7","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Features.js":"8","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\VoiceFeature.js":"9","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\VoipSetup.js":"10","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Sip.js":"11"},{"size":143,"mtime":1645060148397,"results":"12","hashOfConfig":"13"},{"size":122,"mtime":1652532577379,"results":"14","hashOfConfig":"13"},{"size":66,"mtime":1652435753989,"results":"15","hashOfConfig":"13"},{"size":3442,"mtime":1647235733711,"results":"16","hashOfConfig":"13"},{"size":7510,"mtime":1652533118631,"results":"17","hashOfConfig":"13"},{"size":5235,"mtime":1652532771536,"results":"18","hashOfConfig":"13"},{"size":7043,"mtime":1652533017012,"results":"19","hashOfConfig":"13"},{"size":13473,"mtime":1652533208923,"results":"20","hashOfConfig":"13"},{"size":4943,"mtime":1652532848422,"results":"21","hashOfConfig":"13"},{"size":3729,"mtime":1652532671885,"results":"22","hashOfConfig":"13"},{"size":29799,"mtime":1652533358202,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18oebrz",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\index.js",[],["54","55"],"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\App.js",[],"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\test.ts",["56"],"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Line.js",[],"C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\DialPlan.js",["57","58"],"import { React, useContext, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\r\n\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n\r\nimport classes from \"./DialPlan.module.css\";\r\n//import { DefaultContext } from \"../../context/DefaultContext\";\r\n\r\nexport default function DialPlan() {\r\n  //const context = useContext(DefaultContext);\r\n  //const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [saveState, setSaveState] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [normalizationRow, setNormalizationRow] = useState(\r\n    VoipConfig.callControl.dialPlan.normRules\r\n  );\r\n\r\n  const onChange = (event) => {\r\n    //context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    /** update the value here */\r\n    let normEvent = {\r\n      target: {\r\n        name: \"voip__callControl__dialPlan__normRules\",\r\n        value: normalizationRow,\r\n      },\r\n    };\r\n\r\n    // On Change called for submit so that the key values are changed.\r\n    //context.settingsManager.onChange(normEvent, setSettings);\r\n    // On Submit called usual one.\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  const normalizationHeader = [\r\n    {\r\n      title: \"Label\",\r\n      field: \"label\",\r\n      validate: (rowData) =>\r\n        rowData.label === undefined\r\n          ? { isValid: false, helperText: \"Label cannot be empty\" }\r\n          : rowData.label === \"\"\r\n          ? { isValid: false, helperText: \"Label cannot be empty\" }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Number Pattern\",\r\n      field: \"matchPattern\",\r\n      validate: (rowData) =>\r\n        rowData.matchPattern === undefined\r\n          ? { isValid: false, helperText: \"Number Pattern cannot be empty\" }\r\n          : rowData.matchPattern === \"\"\r\n          ? { isValid: false, helperText: \"Number Pattern cannot be empty\" }\r\n          : true,\r\n    },\r\n    {\r\n      title: \"Translation\",\r\n      field: \"translationPattern\",\r\n      validate: (rowData) =>\r\n        rowData.translationPattern === undefined\r\n          ? { isValid: false, helperText: \"Translation cannot be empty\" }\r\n          : rowData.translationPattern === \"\"\r\n          ? { isValid: false, helperText: \"Translation cannot be empty\" }\r\n          : true,\r\n    },\r\n  ];\r\n\r\n  const onRowAddHandler = (newData) =>\r\n    new Promise((resolve, reject) => {\r\n      const updatedNormalizationRow = [...normalizationRow, newData];\r\n      setNormalizationRow(updatedNormalizationRow);\r\n      setSaveState(true);\r\n      resolve();\r\n    });\r\n\r\n  const onRowUpdateHandler = (newData, oldData) =>\r\n    new Promise((resolve, reject) => {\r\n      const updateNormalizationRow = [...normalizationRow];\r\n      const index = oldData.tableData.id;\r\n      updateNormalizationRow[index] = newData;\r\n      setNormalizationRow([...updateNormalizationRow]);\r\n      setSaveState(true);\r\n      resolve();\r\n    });\r\n\r\n  const isSameRow = (a, b) =>\r\n    a.label === b.label &&\r\n    a.matchPattern === b.matchPattern &&\r\n    a.translationPattern === b.translationPattern;\r\n\r\n  const onBulkDeleteHandler = () => {\r\n    const updatedRows = normalizationRow.filter((normRow) => {\r\n      return !selectedRows.some((selectedRow) =>\r\n        isSameRow(selectedRow, normRow)\r\n      );\r\n    });\r\n    setNormalizationRow([...updatedRows]);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSelectionChangeHandler = (rows) => {\r\n    setSelectedRows(rows);\r\n  };\r\n\r\n  // E.g.\r\n  //\r\n  // <TextField name='voip__callControl__dialPlan__digitMap' value={settings.voip.callControl.dialPlan.digitMap} onChange={onChange} />\r\n  // <TextField name='voip__callControl__dialPlan__dialingTimeout' value={settings.voip.callControl.dialPlan.dialingTimeout} onChange={onChange} />\r\n  // <TextField name='voip__callControl__dialPlan__normRules' value={settings.voip.callControl.dialPlan.normRules}/> />\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#808080\",\r\n      },\r\n      secondary: {\r\n        main: \"#808080\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container alignItems=\"center\" className={classes.dialContainer}>\r\n            <Grid item xs={6}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Local&nbsp;Dial&nbsp;Plan\r\n              </Typography>\r\n\r\n              <TextField\r\n                name=\"voip__callControl__dialPlan__digitMap\"\r\n                value={VoipConfig.callControl.dialPlan.digitMap}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Dialing&nbsp;Timeout&nbsp;(seconds)\r\n              </Typography>\r\n\r\n              <TextField\r\n                name=\"voip__callControl__dialPlan__dialingTimeOut\"\r\n                value={VoipConfig.callControl.dialPlan.dialingTimeOut}\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n            gutterBottom\r\n          >\r\n            Normalization\r\n          </Typography>\r\n\r\n          <ThemeProvider theme={theme}>\r\n            <MaterialTable\r\n              columns={normalizationHeader}\r\n              data={normalizationRow}\r\n              title=\"Normalization\"\r\n              options={{\r\n                selection: true,\r\n                search: false,\r\n                paging: false,\r\n                actionsColumnIndex: -1,\r\n                addRowPosition: \"first\",\r\n                showTitle: false,\r\n                headerStyle: {\r\n                  backgroundColor: \"#EEE\",\r\n                },\r\n                rowStyle: (rowData) => ({\r\n                  backgroundColor:\r\n                    rowData.tableData.id % 2 === 0 ? \"#FFF\" : \"#EEE\",\r\n                }),\r\n              }}\r\n              editable={{\r\n                onRowAdd: onRowAddHandler,\r\n                onRowUpdate: onRowUpdateHandler,\r\n              }}\r\n              actions={[\r\n                {\r\n                  icon: \"delete\",\r\n                  tooltip: \"Delete all selected rows\",\r\n                  onClick: onBulkDeleteHandler,\r\n                },\r\n              ]}\r\n              onSelectionChange={onSelectionChangeHandler}\r\n            />\r\n          </ThemeProvider>\r\n\r\n          <Box className={classes.saveButtonContainer}>\r\n            <Button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className={`${\r\n                saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n              }`}\r\n              disabled={!saveState}\r\n            >\r\n              SAVE&nbsp;CHANGES\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Qos.js",["59"],"import { React, useContext, useState } from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport classes from \"./Qos.module.css\";\r\n\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n\r\nexport default function Qos() {\r\n  // const context = useContext(DefaultContext);\r\n  // const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [saveState, setSaveState] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    //context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n            gutterBottom\r\n          >\r\n            Layer&nbsp;3&nbsp;DiffServ\r\n          </Typography>\r\n          <form onSubmit={onSubmit}>\r\n            <Box className={classes.formControlContainer}>\r\n              <FormControl className={classes.formControl} size=\"small\">\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  RTP&nbsp;Traffic\r\n                </Typography>\r\n                <Select\r\n                  name=\"voip__qos__rtpL3\"\r\n                  value={VoipConfig.qos.rtpL3}\r\n                  onChange={onChange}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <MenuItem value={0}></MenuItem>\r\n                  <MenuItem value={1}>CSO</MenuItem>\r\n                  <MenuItem value={2}>CS1</MenuItem>\r\n                  <MenuItem value={3}>AF11</MenuItem>\r\n                  <MenuItem value={4}>AF12</MenuItem>\r\n                  <MenuItem value={5}>AF13</MenuItem>\r\n                  <MenuItem value={6}>CS2</MenuItem>\r\n                  <MenuItem value={7}>AF21</MenuItem>\r\n                  <MenuItem value={8}>AF22</MenuItem>\r\n                  <MenuItem value={9}>AF23</MenuItem>\r\n                  <MenuItem value={10}>CS3</MenuItem>\r\n                  <MenuItem value={11}>AF31</MenuItem>\r\n                  <MenuItem value={12}>AF32</MenuItem>\r\n                  <MenuItem value={13}>AF33</MenuItem>\r\n                  <MenuItem value={14}>CS4</MenuItem>\r\n                  <MenuItem value={15}>AF41</MenuItem>\r\n                  <MenuItem value={16}>AF42</MenuItem>\r\n                  <MenuItem value={17}>AF43</MenuItem>\r\n                  <MenuItem value={18}>CS5</MenuItem>\r\n                  <MenuItem value={19}>EF</MenuItem>\r\n                  <MenuItem value={20}>CS6</MenuItem>\r\n                  <MenuItem value={21}>CS7</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl className={classes.formControl} size=\"small\">\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Call&nbsp;Control&nbsp;Traffic\r\n                </Typography>\r\n                <Select\r\n                  name=\"voip__qos__sipL3\"\r\n                  value={VoipConfig.qos.sipL3}\r\n                  onChange={onChange}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <MenuItem value={0}></MenuItem>\r\n                  <MenuItem value={1}>CSO</MenuItem>\r\n                  <MenuItem value={2}>CS1</MenuItem>\r\n                  <MenuItem value={3}>AF11</MenuItem>\r\n                  <MenuItem value={4}>AF12</MenuItem>\r\n                  <MenuItem value={5}>AF13</MenuItem>\r\n                  <MenuItem value={6}>CS2</MenuItem>\r\n                  <MenuItem value={7}>AF21</MenuItem>\r\n                  <MenuItem value={8}>AF22</MenuItem>\r\n                  <MenuItem value={9}>AF23</MenuItem>\r\n                  <MenuItem value={10}>CS3</MenuItem>\r\n                  <MenuItem value={11}>AF31</MenuItem>\r\n                  <MenuItem value={12}>AF32</MenuItem>\r\n                  <MenuItem value={13}>AF33</MenuItem>\r\n                  <MenuItem value={14}>CS4</MenuItem>\r\n                  <MenuItem value={15}>AF41</MenuItem>\r\n                  <MenuItem value={16}>AF42</MenuItem>\r\n                  <MenuItem value={17}>AF43</MenuItem>\r\n                  <MenuItem value={18}>CS5</MenuItem>\r\n                  <MenuItem value={19}>EF</MenuItem>\r\n                  <MenuItem value={20}>CS6</MenuItem>\r\n                  <MenuItem value={21}>CS7</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            <Box className={classes.saveButtonContainer}>\r\n              <Button\r\n                type=\"submit\"\r\n                className={`${\r\n                  saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n                }`}\r\n                disabled={!saveState}\r\n              >\r\n                SAVE&nbsp;CHANGES\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Nat.js",["60"],"import { React, useContext, useState } from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/FilledInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport classes from \"./Nat.module.css\";\r\n//import { DefaultContext } from \"../../context/DefaultContext\";\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n\r\nexport default function Nat() {\r\n  //const context = useContext(DefaultContext);\r\n  //const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [saveState, setSaveState] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    //context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent className={classes.container}>\r\n          <Typography component=\"div\">\r\n            <Grid container alignItems=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Keepalive\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__nat__keepalive\"\r\n                    checked={VoipConfig.nat.keepalive}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  ICE\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__nat__ice\"\r\n                    checked={VoipConfig.nat.ice}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                TURN\r\n              </Typography>\r\n              <Grid item xs={12} className={classes.switch}>\r\n                <Grid item>Off</Grid>\r\n                <Switch\r\n                  name=\"voip__nat__turnEnable\"\r\n                  checked={VoipConfig.nat.turnEnable}\r\n                  onChange={onChange}\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                />\r\n                <Grid item>On</Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  STUN/TURN&nbsp;Server\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <TextField\r\n                    name=\"voip__nat__stunTurnSrv__addr\"\r\n                    value={VoipConfig.nat.stunTurnSrv.addr}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  STUN/TURN&nbsp;Server&nbsp;Port\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <TextField\r\n                    name=\"voip__nat__stunTurnSrv__port\"\r\n                    value={VoipConfig.nat.stunTurnSrv.port}\r\n                    onChange={onChange}\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  TURN&nbsp;User&nbsp;Name\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <TextField\r\n                    name=\"voip__nat__auth__user\"\r\n                    value={VoipConfig.nat.auth.user}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    disabled={!VoipConfig.nat.turnEnable}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  TURN&nbsp;Password\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <OutlinedInput\r\n                    name=\"voip__nat__auth__passwd\"\r\n                    value={VoipConfig.nat.auth.passwd}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    variant=\"outlined\"\r\n                    disabled={!VoipConfig.nat.turnEnable}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    sx={{ height: 38, width: 190 }}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() =>\r\n                            setShowPassword((showPassword) => !showPassword)\r\n                          }\r\n                          onMouseDown={(event) => event.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Box className={classes.saveButtonContainer}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={onSubmit}\r\n                className={`${\r\n                  saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n                }`}\r\n                disabled={!saveState}\r\n              >\r\n                SAVE&nbsp;CHANGES\r\n              </Button>\r\n            </Box>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Features.js",["61"],"import { React, useContext, useState } from \"react\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport PlayCircleFilledWhiteIcon from \"@mui/icons-material/PlayCircleFilledWhite\";\r\n\r\nimport classes from \"./Features.module.css\";\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n// import { DefaultContext } from \"../../context/DefaultContext\";\r\n\r\nexport default function Features(featureProps) {\r\n  //const context = useContext(DefaultContext);\r\n  //const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [saveState, setSaveState] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n   // context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent className={classes.container}>\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n            gutterBottom\r\n          >\r\n            Tones\r\n          </Typography>\r\n\r\n          <Typography component=\"div\">\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n              sm\r\n            >\r\n              {featureProps.advancedConfig && (\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Local&nbsp;DTMF&nbsp;(Mute)\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <Grid item>Off</Grid>\r\n\r\n                    <Switch\r\n                      name=\"voip__callControl__tone__localDtmfMute\"\r\n                      checked={VoipConfig.callControl.tone.localDtmfMute}\r\n                      onChange={onChange}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    />\r\n\r\n                    <Grid item>On</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              {featureProps.advancedConfig && (\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Local&nbsp;DTMF&nbsp;Level\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <TextField\r\n                      name=\"voip__callControl__tone__localDtmfLevel\"\r\n                      value={VoipConfig.callControl.tone.localDtmfLevel}\r\n                      onChange={onChange}\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              <FormControl className={classes.formControl} size=\"small\">\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    DTMF&nbsp;Scheme\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <Select\r\n                      name=\"voip__callControl__tone__dtmfType\"\r\n                      value={VoipConfig.callControl.tone.dtmfType}\r\n                      onChange={onChange}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <MenuItem value={1}>Out-Of-Band</MenuItem>\r\n\r\n                      <MenuItem value={2}>SIP Info</MenuItem>\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormControl>\r\n\r\n              {featureProps.advancedConfig && (\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Call&nbsp;Progress&nbsp;Tone&nbsp;Level\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <TextField\r\n                      name=\"voip__callControl__tone__CPTLevel\"\r\n                      value={VoipConfig.callControl.tone.CPTLevel}\r\n                      onChange={onChange}\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              <FormControl className={classes.formControl} size=\"small\">\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Ringer\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <Select\r\n                      name=\"voip__callControl__tone__ringer\"\r\n                      value={VoipConfig.callControl.tone.ringer}\r\n                      onChange={onChange}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      <MenuItem value={\"leaving_dreams.mkv\"}>\r\n                        leaving_dreams.mkv\r\n                      </MenuItem>\r\n                      <MenuItem value={\"soft_as_snow.mkv\"}>\r\n                        soft_as_snow.mkv\r\n                      </MenuItem>\r\n                      <MenuItem value={\"house_keeping.mkv\"}>\r\n                        house_keeping.mkv\r\n                      </MenuItem>\r\n                      <MenuItem value={\"notes_of_the_optimistic.mkv\"}>\r\n                        notes_of_the_optimistic.mkv\r\n                      </MenuItem>\r\n                      <MenuItem value={\"oldphone-mono.wav\"}>\r\n                        oldphone-mono.wav\r\n                      </MenuItem>\r\n                      <MenuItem value={\"four_hands_together.mkv\"}>\r\n                        four_hands_together.mkv\r\n                      </MenuItem>\r\n                      <MenuItem value={\"its_a_game.mkv\"}>\r\n                        its_a_game.mkv\r\n                      </MenuItem>\r\n                    </Select>\r\n\r\n                    {featureProps.advancedConfig && (\r\n                      <Grid item xs={2} className={classes.ringerElements}>\r\n                        <Grid item>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<DeleteIcon sx={{ marginLeft: 1.5 }} />}\r\n                            style={{\r\n                              maxWidth: \"40px\",\r\n                              maxHeight: \"40px\",\r\n                              minWidth: \"40px\",\r\n                              minHeight: \"40px\",\r\n                            }}\r\n                          ></Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n\r\n                    <Grid item xs={2} className={classes.ringerElements}>\r\n                      <Grid item>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          startIcon={\r\n                            <PlayCircleFilledWhiteIcon\r\n                              sx={{ marginLeft: 1.5 }}\r\n                            />\r\n                          }\r\n                          style={{\r\n                            maxWidth: \"40px\",\r\n                            maxHeight: \"40px\",\r\n                            minWidth: \"40px\",\r\n                            minHeight: \"40px\",\r\n                          }}\r\n                        ></Button>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {featureProps.advancedConfig && (\r\n                      <Grid item xs={2} className={classes.ringerElements}>\r\n                        <Grid item>\r\n                          <input type=\"file\" hidden id=\"ringer__file\" />\r\n                          <label htmlFor=\"ringer__file\">\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              component=\"span\"\r\n                              type=\"file\"\r\n                              style={{\r\n                                maxHeight: \"40px\",\r\n                                minHeight: \"40px\",\r\n                              }}\r\n                              className={classes.ringerButton}\r\n                            >\r\n                              ADD&nbsp;RINGER...\r\n                            </Button>\r\n                          </label>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Box className={classes.formControlContainer}>\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                className={classes.title}\r\n                gutterBottom\r\n              >\r\n                Call&nbsp;Features\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Redial\r\n                </Typography>\r\n\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n\r\n                  <Switch\r\n                    name=\"voip__callControl__redial\"\r\n                    checked={VoipConfig.callControl.redial}\r\n                    onChange={onChange}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Consultative&nbsp;Transfer\r\n                </Typography>\r\n\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n\r\n                  <Switch\r\n                    name=\"voip__callControl__consultTransfer\"\r\n                    checked={VoipConfig.callControl.consultTransfer}\r\n                    onChange={onChange}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {featureProps.advancedConfig && (\r\n                <Grid item xs={4}>\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Do&nbsp;Not&nbsp;Disturb\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.switch}>\r\n                    <Grid item>Off</Grid>\r\n\r\n                    <Switch\r\n                      name=\"voip__callControl__dnd\"\r\n                      checked={VoipConfig.callControl.dnd}\r\n                      onChange={onChange}\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                    />\r\n\r\n                    <Grid item>On</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Auto&nbsp;Answer\r\n                </Typography>\r\n\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n\r\n                  <Switch\r\n                    name=\"voip__callControl__autoAnswer__enabled\"\r\n                    checked={VoipConfig.callControl.autoAnswer.enabled}\r\n                    onChange={onChange}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Auto&nbsp;Answer&nbsp;Delay\r\n                </Typography>\r\n\r\n                <Grid item className={classes.switch}>\r\n                  <TextField\r\n                    name=\"voip__callControl__autoAnswer__delay\"\r\n                    value={VoipConfig.callControl.autoAnswer.delay}\r\n                    onChange={onChange}\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box className={classes.saveButtonContainer}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={onSubmit}\r\n                className={`${\r\n                  saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n                }`}\r\n                disabled={!saveState}\r\n              >\r\n                SAVE&nbsp;CHANGES\r\n              </Button>\r\n            </Box>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\VoiceFeature.js",["62","63"],"import { React, useContext, useState } from \"react\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\r\n\r\nimport classes from \"./VoiceFeature.module.css\";\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n\r\nexport default function VoiceFeature() {\r\n  // const context = useContext(DefaultContext);\r\n  // const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [codecRow, setCodecRow] = useState(VoipConfig.callControl.codecs);\r\n  const [saveState, setSaveState] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    //context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n  const onSubmit = (event) => {\r\n    /** update the value here */\r\n    let codecEvent = {\r\n      target: {\r\n        name: \"voip__callControl__codecs\",\r\n        value: codecRow,\r\n      },\r\n    };\r\n\r\n    // On Change called for submit so that the key values are changed.\r\n    //context.settingsManager.onChange(codecEvent, setSettings);\r\n    // On Submit called usual one.\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  const onRowUpdateHandler = (newData, oldData) =>\r\n    new Promise((resolve, reject) => {\r\n      const updateCodecRow = [...codecRow];\r\n      const index = oldData.tableData.id;\r\n      updateCodecRow[index] = newData;\r\n      setCodecRow([...updateCodecRow]);\r\n      setSaveState(true);\r\n      resolve();\r\n    });\r\n\r\n  const voiceCodePriorityHeader = [\r\n    {\r\n      title: \"Use\",\r\n      field: \"inUse\",\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      title: \"Codec\",\r\n      field: \"codec\",\r\n      lookup: { 1: \"OPUS\", 2: \"G722\", 3: \"G711U\", 4: \"G711A\", 5: \"G729AB\" },\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Bit Rate\",\r\n      field: \"conf.bitRate\",\r\n    },\r\n    {\r\n      title: \"Use CBR\",\r\n      field: \"conf.cbr\",\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      title: \"Use DTX\",\r\n      field: \"conf.usedtx\",\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      title: \"Use inBand FEC\",\r\n      field: \"conf.useinbandfec\",\r\n      type: \"boolean\",\r\n    },\r\n  ];\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#808080\",\r\n      },\r\n      secondary: {\r\n        main: \"#808080\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography component=\"div\" className={classes.voiceFeatureContainer}>\r\n            <Grid container alignItems=\"center\">\r\n              <Grid item xs={12}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Comfort&nbsp;Noise\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__callControl__comfortNoise\"\r\n                    checked={VoipConfig.callControl.comfortNoise}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n            gutterBottom\r\n          >\r\n            Voice&nbsp;Codec&nbsp;Priorities\r\n          </Typography>\r\n\r\n          <ThemeProvider theme={theme}>\r\n            <MaterialTable\r\n              columns={voiceCodePriorityHeader}\r\n              data={codecRow}\r\n              title=\"Voice Codec Priorities\"\r\n              options={{\r\n                search: false,\r\n                paging: false,\r\n                actionsColumnIndex: -1,\r\n                showTitle: false,\r\n                headerStyle: {\r\n                  backgroundColor: \"#EEE\",\r\n                },\r\n                rowStyle: (rowData) => ({\r\n                  backgroundColor:\r\n                    rowData.tableData.id % 2 === 0 ? \"#FFF\" : \"#EEE\",\r\n                }),\r\n              }}\r\n              editable={{\r\n                onRowUpdate: onRowUpdateHandler,\r\n              }}\r\n            />\r\n          </ThemeProvider>\r\n\r\n          <Box className={classes.saveButtonContainer}>\r\n            <Button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className={`${\r\n                saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n              }`}\r\n              disabled={!saveState}\r\n            >\r\n              SAVE&nbsp;CHANGES\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\VoipSetup.js",["64","65"],"import { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Qos from \"./Qos\";\r\nimport VoiceFeature from \"./VoiceFeature\";\r\nimport Nat from \"./Nat\";\r\nimport DialPlan from \"./DialPlan\";\r\nimport Features from \"./Features\";\r\nimport Sip from \"./Sip\";\r\nimport classes from \"./VoipSetup.module.css\";\r\n\r\n//temporary until the backend values are not available - to be deleted\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n// ends here\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`voip-tabpanel-${index}`}\r\n      aria-labelledby={`voip-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// TODO: lift\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n// TODO: lift\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `voip-tab-${index}`,\r\n    \"aria-controls\": `voip-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst VoipSetup = () => {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const TabChangeHandler = (event, newTabIndex) => {\r\n    setTabIndex(newTabIndex);\r\n  };\r\n\r\n  const [advanced, setAdvanced] = useState(false);\r\n\r\n  const voIPSettingsHandler = () => {\r\n    setAdvanced((advanced) => !advanced);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box className={classes.switchButtonContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          onClick={voIPSettingsHandler}\r\n        >\r\n          {advanced ? \"SWITCH TO STANDARD\" : \"SWITCH TO ADVANCED\"}\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box>\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{\r\n            background: \"white\",\r\n            marginLeft: \"1.5rem\",\r\n            marginRight: \"2rem\",\r\n            width: \"auto\"\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={tabIndex}\r\n            onChange={TabChangeHandler}\r\n            className={classes.tabPanel}\r\n          >\r\n            <Tab className={classes.tab} label=\"SIP Config\" {...a11yProps(0)} />\r\n            <Tab className={classes.tab} label=\"Features\" {...a11yProps(1)} />\r\n            <Tab className={classes.tab} label=\"Dial Plan\" {...a11yProps(2)} />\r\n            <Tab\r\n              className={classes.tab}\r\n              label=\"Quality of Service\"\r\n              {...a11yProps(3)}\r\n            />\r\n            <Tab className={classes.tab} label=\"NAT\" {...a11yProps(4)} />\r\n            <Tab\r\n              className={classes.tab}\r\n              label=\"Voice Features\"\r\n              {...a11yProps(5)}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <TabPanel value={tabIndex} index={0}>\r\n          <Sip advancedConfig={advanced} />\r\n        </TabPanel>\r\n        <TabPanel value={tabIndex} index={1}>\r\n          <Features advancedConfig={advanced} />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabIndex} index={2}>\r\n          <DialPlan />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabIndex} index={3}>\r\n          <Qos />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabIndex} index={4}>\r\n          <Nat />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabIndex} index={5}>\r\n          <VoiceFeature />\r\n        </TabPanel>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoipSetup;\r\n","C:\\Users\\shreyas.joshi\\Downloads\\PS\\Shreyas\\Tech_update\\ReactJS\\01-mui-test\\src\\components\\voip\\Sip.js",["66"],"import { React, useContext, useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/FilledInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport classes from \"./Sip.module.css\";\r\nimport VoipConfig from \"./VoIPConfigMock.json\";\r\n\r\n//import { DefaultContext } from \"../../context/DefaultContext\";\r\n\r\nexport default function Sip(SipProps) {\r\n  //const context = useContext(DefaultContext);\r\n\r\n  //const [settings, setSettings] = useState(context.settingsManager.settings);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [saveState, setSaveState] = useState(false);\r\n\r\n  const vendorSpecificURL = [\r\n    \"https://google.com\",\r\n    \"https://google.com\",\r\n    \"https://google.com\",\r\n    \"https://google.com\",\r\n    \"https://google.com\",\r\n  ];\r\n\r\n  const onChange = (event) => {\r\n    //context.settingsManager.onChange(event, setSettings);\r\n    setSaveState(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    //context.settingsManager.onSubmit(event);\r\n    setSaveState(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent className={classes.container}>\r\n          {SipProps.advancedConfig && (\r\n            <Typography\r\n              component=\"h5\"\r\n              variant=\"h5\"\r\n              className={classes.title}\r\n              gutterBottom\r\n            >\r\n              Account\r\n            </Typography>\r\n          )}\r\n\r\n          <Grid container alignItems=\"center\" className={classes.gridContainer}>\r\n            <Grid item xs={6}>\r\n              <FormControl className={classes.FormControl} size=\"small\">\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Proxy&nbsp;Vendor&emsp;\r\n                  <Link\r\n                    href={vendorSpecificURL[VoipConfig.account.vendor]}\r\n                    target=\"_blank\"\r\n                  >\r\n                    Vendor Specific Setup Instructions\r\n                  </Link>\r\n                </Typography>\r\n                <Select\r\n                  name=\"voip__account__vendor\"\r\n                  value={VoipConfig.account.vendor}\r\n                  onChange={onChange}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  <MenuItem value={0}>Generic UC</MenuItem>\r\n                  <MenuItem value={1}>Avaya SM</MenuItem>\r\n                  <MenuItem value={2}>Avaya IPO</MenuItem>\r\n                  <MenuItem value={3}>Cisco</MenuItem>\r\n                  <MenuItem value={4}>Mitel</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                SIP&nbsp;User&nbsp;Name\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__user\"\r\n                value={VoipConfig.account.user}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Authentication&nbsp;User&nbsp;Name\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__auth__name\"\r\n                value={VoipConfig.account.auth.name}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                type=\"Text\"\r\n                size=\"small\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container alignItems=\"center\" className={classes.gridContainer}>\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Proxy&nbsp;Address\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__proxies__0__addr\"\r\n                value={VoipConfig.account.proxies[0].addr}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"Text\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Proxy&nbsp;Port{\" \"}\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__proxies__0__port\"\r\n                value={VoipConfig.account.proxies[0].port}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"number\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                SIP&nbsp;Display&nbsp;Name\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__displayName\"\r\n                value={VoipConfig.account.displayName}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"Text\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Authentication&nbsp;Password\r\n              </Typography>\r\n              <OutlinedInput\r\n                name=\"voip__account__auth__passwd\"\r\n                onChange={onChange}\r\n                value={VoipConfig.account.auth.passwd}\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ height: 38, width: 190 }}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setShowPassword((showPassword) => !showPassword)\r\n                      }\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container alignItems=\"center\" className={classes.gridContainer}>\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  DNS&nbsp;NAPTR/SRV&nbsp;Lookup\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__account__dnsServ\"\r\n                    value={VoipConfig.account.dnsServ}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <FormControl className={classes.FormControl} size=\"small\">\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Proxy&nbsp;Transport\r\n                  </Typography>\r\n\r\n                  <Select\r\n                    name=\"voip__account__transport\"\r\n                    value={VoipConfig.account.transport}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <MenuItem value={0}>UDP</MenuItem>\r\n                    <MenuItem value={1}>TCP</MenuItem>\r\n                    <MenuItem value={2}>TLS</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                SIP&nbsp;Domain&nbsp;Name\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__domain\"\r\n                value={VoipConfig.account.domain}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                type=\"Text\"\r\n                size=\"small\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Register\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__account__reqRegister\"\r\n                    value={VoipConfig.account.regRegister}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={3}>\r\n              <Typography component=\"h4\" className={classes.labelTitle}>\r\n                Registration&nbsp;Expiration\r\n              </Typography>\r\n              <TextField\r\n                name=\"voip__account__regInterval\"\r\n                value={VoipConfig.account.regInterval}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                size=\"small\"\r\n                className={classes.Text}\r\n              />\r\n            </Grid>\r\n\r\n            {!SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Configuration&nbsp;File\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__settings__upload\"\r\n                  type=\"file\"\r\n                  variant=\"standard\"\r\n                  InputProps={{\r\n                    disableUnderline: true,\r\n                  }}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            )}\r\n\r\n            {!SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <Box\r\n                  className={classes.addDeleteContainer}\r\n                  style={{ marginTop: \"4rem\" }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.operationButton}\r\n                  >\r\n                    UPLOAD\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.operationButton}\r\n                  >\r\n                    DOWNLOAD\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            )}\r\n\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  AVPF\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__account__avpf\"\r\n                    value={VoipConfig.account.avpf}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  AVPF&nbsp;Interval\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__account__avpfInterval\"\r\n                  value={VoipConfig.account.avpfInterval}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.smallText}\r\n                />\r\n              </Grid>\r\n            )}\r\n\r\n            {SipProps.advancedConfig && (\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  PRACK\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__callControl__prack\"\r\n                    value={VoipConfig.callControl.prack}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Session&nbsp;Timer\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__callControl__sessTimer__enable\"\r\n                    value={VoipConfig.callControl.sessTimer.enable}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <FormControl className={classes.Text} size=\"small\">\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Session&nbsp;Refresher\r\n                  </Typography>\r\n                  <Select\r\n                    name=\"voip__callControl__sessTimer__refresher\"\r\n                    value={VoipConfig.callControl.sessTimer.refresher}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <MenuItem value={0}>Auto</MenuItem>\r\n                    <MenuItem value={1}>UAS</MenuItem>\r\n                    <MenuItem value={2}>UAC</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Session&nbsp;Expiration\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__callControl__sessTimer__expires\"\r\n                  value={VoipConfig.callControl.sessTimer.expires}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Min&nbsp;Session&nbsp;Expiration\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__callControl__sessTimer__minExpires\"\r\n                  value={VoipConfig.callControl.sessTimer.minExpires}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Box className={classes.formControlContainer}>\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                className={classes.title}\r\n                gutterBottom\r\n              >\r\n                RTP/SRTP\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Random&nbsp;RTP&nbsp;port\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__rtpUdp__random\"\r\n                    value={VoipConfig.transports.rtpUdp.random}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Audio&nbsp;RTP&nbsp;UDP&nbsp;Port\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__transports__rtpUdp__port\"\r\n                  value={VoipConfig.transports.rtpUdp.port}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <FormControl className={classes.Text} size=\"small\">\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Media&nbsp;Encryption&nbsp;Preference\r\n                  </Typography>\r\n                  <Select\r\n                    name=\"voip__callControl__encryption__mode\"\r\n                    value={VoipConfig.callControl.encryption.mode}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <MenuItem value={0}>None</MenuItem>\r\n                    <MenuItem value={1}>Optional</MenuItem>\r\n                    <MenuItem value={2}>Required</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <FormControl className={classes.Text} size=\"small\">\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Media&nbsp;Encryption&nbsp;Method\r\n                  </Typography>\r\n                  <Select\r\n                    name=\"voip__callControl__encryption__algorithm\"\r\n                    value={VoipConfig.callControl.encryption.algorithm}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <MenuItem value={0}>DTLS</MenuItem>\r\n                    <MenuItem value={1}>SRTP</MenuItem>\r\n                    <MenuItem value={2}>ZRTP</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Box className={classes.formControlContainer}>\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                className={classes.title}\r\n                gutterBottom\r\n              >\r\n                Network&nbsp;Protocol&nbsp;and&nbsp;Ports\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Enable&nbsp;UDP\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipUdp__enable\"\r\n                    value={VoipConfig.transports.sipUdp.enable}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Random&nbsp;UDP&nbsp;Port\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipUdp__random\"\r\n                    value={VoipConfig.transports.sipUdp.random}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  SIP&nbsp;UDP&nbsp;Port\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__transports__sipUdp__port\"\r\n                  value={VoipConfig.transports.sipUdp.port}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Enable&nbsp;TCP\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipTcp__enable\"\r\n                    value={VoipConfig.transports.sipTcp.enable}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Random&nbsp;TCP&nbsp;Port\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipTcp__random\"\r\n                    value={VoipConfig.transports.sipTcp.random}\r\n                    onChange={onChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  SIP&nbsp;TCP&nbsp;Port\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__transports__sipTcp__port\"\r\n                  value={VoipConfig.transports.sipTcp.port}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Enable&nbsp;TLS\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipTls__enable\"\r\n                    value={VoipConfig.transports.sipTls.enable}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  Random&nbsp;TLS&nbsp;Port\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__transports__sipTls__random\"\r\n                    value={VoipConfig.transports.sipTls.random}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  SIP&nbsp;TLS&nbsp;Port\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__transports__sipTls__port\"\r\n                  value={VoipConfig.transports.sipTls.port}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={2}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  TLS&nbsp;Version\r\n                </Typography>\r\n                <TextField\r\n                  name=\"voip__tls__version\"\r\n                  value={VoipConfig.tls.version}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  className={classes.Text}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Box className={classes.formControlContainer}>\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                className={classes.title}\r\n                gutterBottom\r\n              >\r\n                SIPS\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {SipProps.advancedConfig && (\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.Text} size=\"small\">\r\n                  <Typography component=\"h4\" className={classes.labelTitle}>\r\n                    Certificate&nbsp;Preference\r\n                  </Typography>\r\n                  <Select\r\n                    name=\"voip__tls__cert__tlsCertPref\"\r\n                    value={VoipConfig.tls.cert.tlsCertPref}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    <MenuItem value={0}>None</MenuItem>\r\n                    <MenuItem value={1}>Mutual</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Typography component=\"h4\" className={classes.labelTitle}>\r\n                  SIP&nbsp;URI\r\n                </Typography>\r\n                <Grid item className={classes.switch}>\r\n                  <Grid item>Off</Grid>\r\n                  <Switch\r\n                    name=\"voip__account__sipsUri\"\r\n                    value={VoipConfig.account.sipsUri}\r\n                    onChange={onChange}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                  />\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          <Box className={classes.saveButtonContainer}>\r\n            <Button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className={`${\r\n                saveState ? `${classes.button}` : `${classes.buttonDisable}`\r\n              }`}\r\n              disabled={!saveState}\r\n            >\r\n              SAVE&nbsp;CHANGES\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n      {/* {SipProps.advancedConfig && (\r\n        <Card>\r\n          <CardContent>\r\n            <Box className={classes.formControlContainer}>\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                className={classes.title}\r\n                gutterBottom\r\n              >\r\n                Certificate&nbsp;Management\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      )} */}\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":null,"fatal":true,"severity":2,"message":"71","line":1,"column":36},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"76","line":34,"column":9,"nodeType":"74","messageId":"75","endLine":34,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"77","line":28,"column":9,"nodeType":"74","messageId":"75","endLine":28,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":20},{"ruleId":"72","severity":1,"message":"78","line":16,"column":8,"nodeType":"74","messageId":"75","endLine":16,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"Parsing error: ',' expected.","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'normEvent' is assigned a value but never used.","'codecEvent' is assigned a value but never used.","'VoipConfig' is defined but never used.","no-global-assign","no-unsafe-negation"]